import{_ as s,r as t,o as a,c as r,a as e,d as l,w as c,b as o,e as d}from"./app-CutjyUmw.js";const i={},p=d(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>表示MySQL在表中找到所需行的方式，又称“访问类型”。

常用的类型有： ALL, index,  range, ref, eq_ref, const, system, NULL（从左到右，性能从差到好）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ALL：Full Table Scan，</p><p>index: Full Index Scan，index与ALL区别为index类型只遍历索引树</p><p>range:只检索给定范围的行，使用一个索引来选择行</p><p>ref: 表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值</p><p>eq_ref: 类似ref，区别就在使用的索引是唯一索引，对于每个索引键值，表中只有一条记录匹配，简单来说，就是多表连接中使用primary key或者 unique key作为关联条件</p><p>const、system: 当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。如将主键置于where列表中，MySQL就能将该查询转换为一个常量,system是const类型的特例，当查询的表只有一行的情况下，使用system</p><p>NULL: MySQL在优化过程中分解语句，执行时甚至不用访问表或索引，例如从一个索引列里选取最小值可以通过单独索引查找完成。</p>`,8);function m(u,_){const n=t("font");return a(),r("div",null,[e("p",null,[e("strong",null,[l(n,{color:"#0000FF",size:"5"},{default:c(()=>[o("type")]),_:1})])]),p])}const f=s(i,[["render",m],["__file","mysql-type.html.vue"]]);export{f as default};
