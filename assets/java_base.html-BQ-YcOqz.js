import{_ as s,r as t,o,c,a as e,b as a,d as n,w as d,e as l}from"./app-CutjyUmw.js";const h={},_=l(`<h1 id="java-基础" tabindex="-1"><a class="header-anchor" href="#java-基础" aria-hidden="true">#</a> JAVA 基础</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>面向对象编程的三大特性
封装，继承，多态
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_1-static关键字-静态变量什么时候赋值" tabindex="-1"><a class="header-anchor" href="#_1-static关键字-静态变量什么时候赋值" aria-hidden="true">#</a> <strong>1.static关键字，静态变量什么时候赋值</strong></h1>`,3),u={href:"https://www.cnblogs.com/xrq730/p/4820992.html",target:"_blank",rel:"noopener noreferrer"},m=e("h1",{id:"_2-java中的锁",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-java中的锁","aria-hidden":"true"},"#"),a(),e("strong",null,"2.java中的锁")],-1),v=l('<h1 id="_3-基本类型和包装类型的区别" tabindex="-1"><a class="header-anchor" href="#_3-基本类型和包装类型的区别" aria-hidden="true">#</a> <strong>3.基本类型和包装类型的区别</strong></h1><ul><li>基本类型不可为NULL，包装类型可以为NULL</li><li>基本类型==对比是实际值，包装类型==对比的地址</li><li>包装类型可以用于泛型，基本类型不可以</li><li>自动装箱和自动拆箱</li></ul><h1 id="_4-jvm内存组成" tabindex="-1"><a class="header-anchor" href="#_4-jvm内存组成" aria-hidden="true">#</a> <strong>4.jvm内存组成</strong></h1><ul><li>程序计数器（线程私有）</li><li>虚拟机栈（线程私有）</li><li>本地方法区（线程私有）</li><li>栈（线程共享）</li><li>方法区/永久代（线程共享）</li></ul>',4);function x(b,f){const i=t("ExternalLinkIcon"),r=t("RouterLink");return o(),c("div",null,[_,e("ul",null,[e("li",null,[e("a",u,[a("https://www.cnblogs.com/xrq730/p/4820992.html"),n(i)])])]),m,e("ul",null,[e("li",null,[n(r,{to:"/blogs/JAVA/2022/java-lock.html"},{default:d(()=>[a("锁")]),_:1})])]),v])}const p=s(h,[["render",x],["__file","java_base.html.vue"]]);export{p as default};
